spring:
  application:
    name: msvc-orders

  datasource:
    url: jdbc:postgresql://localhost:5432/Orders_DB
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    driver-class-name: org.postgresql.Driver

  jpa:
    hibernate:
      ddl-auto: update  # Cambiar según sea necesario
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
  # Configuración de RabbitMQ
  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest

eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://localhost:8761/eureka/

feign:
  client:
    config:
      default:
        connectTimeout: 5000
        readTimeout: 5000
        loggerLevel: full

msvc-books:
  url: http://msvc-books:8080

msvc-payments:
  url: http://msvc-payments:8091

server:
  port: 8090

management:
  endpoints:
    web:
      exposure:
        include: "*"

# Logging
logging:
  level:
    root: INFO
    org.springframework.amqp: INFO
    com.microservice.orders: DEBUG
app:
  rabbitmq:
    exchange: orders-exchange
    queue: orders-queue
    routingKey: orders.created